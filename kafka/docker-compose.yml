version: '2'

services:
  zoo:
    image: wurstmeister/zookeeper
    restart: unless-stopped
    hostname: zoo
    networks:
      default:
        ipv4_address: 172.18.2.3
    ports:
      - "2181:2181"
    container_name: zookeeper

  # kafka version: 1.1.0
  # scala version: 2.12
  kafka1:
    image: wurstmeister/kafka
    networks:
      default:
        ipv4_address: 172.18.2.4
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka1
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "stream-in:1:1,stream-out:1:1"
    depends_on:
      - zoo
    container_name: kafka1
  kafka2:
    image: wurstmeister/kafka
    networks:
      default:
        ipv4_address: 172.18.2.5
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka2
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zoo
    container_name: kafka2
  kafka3:
    image: wurstmeister/kafka
    networks:
      default:
        ipv4_address: 172.18.2.6
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka3
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zoo
    container_name: kafka3

networks:
  default:
    external:
      name: shadowlands-network
